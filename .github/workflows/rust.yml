name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libglib2.0-dev libcairo2-dev libpango1.0-dev \
            libfontconfig1-dev libfreetype6-dev libharfbuzz-dev libgtk-4-dev \
            libgdk-4-dev libgtk-4-dev

      - name: Install system dependencies (macOS only)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install pkg-config glib cairo pango fontconfig freetype harfbuzz gtk4

      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Rust toolchain
        run: rustup toolchain install stable --profile minimal

      - name: Build and test workspace
        run: |
          cargo build --workspace --verbose
          cargo test --workspace --verbose
